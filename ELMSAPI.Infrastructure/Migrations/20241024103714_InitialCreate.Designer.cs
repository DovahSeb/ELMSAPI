// <auto-generated />
using System;
using ELMSAPI.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ELMSAPI.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241024103714_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ELMSAPI.Domain.Models.LeaveStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeaveStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4531),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4544),
                            Description = "Pending",
                            Status = "I"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4546),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4546),
                            Description = "Approved",
                            Status = "I"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4547),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4548),
                            Description = "Rejected",
                            Status = "I"
                        });
                });

            modelBuilder.Entity("ELMSAPI.Domain.Models.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4648),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4650),
                            Status = "I",
                            Type = "Annual"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4651),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4652),
                            Status = "I",
                            Type = "Sick"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4653),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4653),
                            Status = "I",
                            Type = "Maternity"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4654),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4654),
                            Status = "I",
                            Type = "Paternity"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4655),
                            DateModified = new DateTime(2024, 10, 24, 14, 37, 14, 92, DateTimeKind.Local).AddTicks(4656),
                            Status = "I",
                            Type = "Unpaid"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
